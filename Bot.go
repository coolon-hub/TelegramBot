package main

import (
	"fmt"
	"log"
	"math/rand"
	"time"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

var (
	randomNumber int
	hello        string
	creator      string
	help         string
)

func main() {
	text()

	bot, err := tgbotapi.NewBotAPI("8237516250:AAHkIyTXTTsktx11sywTgdl13qUXP_g1KhE")
	if err != nil {
		log.Panic(err)
	}

	bot.Debug = false
	log.Printf("–ë–æ—Ç %s –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!", bot.Self.UserName)

	// –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60
	updates := bot.GetUpdatesChan(u)

	// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
	for update := range updates {
		// –í–´–í–û–î–ò–ú –í–°–ï –°–û–û–ë–©–ï–ù–ò–Ø –í –ö–û–ù–°–û–õ–¨
		if update.Message != nil {
			printMessageToConsole(update.Message)
		}

		// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
		if update.Message != nil && update.Message.IsCommand() {
			switch update.Message.Command() {
			case "start":
				msg := tgbotapi.NewMessage(update.Message.Chat.ID, hello)
				msg.ReplyToMessageID = update.Message.MessageID
				if _, err := bot.Send(msg); err != nil {
					log.Println("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", err)
				}

			case "random":
				random()
				responseText := fmt.Sprintf("üé≤ –í–∞—à–µ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ: %d", randomNumber)
				msg := tgbotapi.NewMessage(update.Message.Chat.ID, responseText)
				msg.ReplyToMessageID = update.Message.MessageID
				if _, err := bot.Send(msg); err != nil {
					log.Println("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", err)
				}

			case "creator":
				responseText := fmt.Sprintf(creator)
				msg := tgbotapi.NewMessage(update.Message.Chat.ID, responseText)
				msg.ReplyToMessageID = update.Message.MessageID
				if _, err := bot.Send(msg); err != nil {
					log.Println("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", err)
				}

			case "help":
				responseText := fmt.Sprintf(help)
				msg := tgbotapi.NewMessage(update.Message.Chat.ID, responseText)
				msg.ReplyToMessageID = update.Message.MessageID
				if _, err := bot.Send(msg); err != nil {
					log.Println("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", err)
				}

			default:
				msg := tgbotapi.NewMessage(update.Message.Chat.ID, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.")
				bot.Send(msg)
			}
		}
	}
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–æ–Ω—Å–æ–ª—å
func printMessageToConsole(message *tgbotapi.Message) {
	timestamp := time.Now().Format("15:04:05")

	fmt.Printf("\n=== üì® –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ===\n")
	fmt.Printf("–í—Ä–µ–º—è: %s\n", timestamp)
	fmt.Printf("–û—Ç: %s %s (@%s)\n",
		message.From.FirstName,
		message.From.LastName,
		message.From.UserName)
	fmt.Printf("ID —á–∞—Ç–∞: %d\n", message.Chat.ID)
	fmt.Printf("–¢–µ–∫—Å—Ç: %s\n", message.Text)

	if message.IsCommand() {
		fmt.Printf("–ö–æ–º–∞–Ω–¥–∞: /%s\n", message.Command())
	}
	fmt.Printf("==========================\n")
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–Ω–¥–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —á–∏—Å–µ–ª
func random() {
	randomNumber = rand.Intn(100) + 1
	fmt.Printf("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —á–∏—Å–ª–æ: %d\n", randomNumber)
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏–µ –≤—ã–≤–æ–¥–∏–º–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
func text() {
	hello = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–µ—Å—Ç–æ–≤—É—é –≤–µ—Ä—Å–∏—é –±–æ—Ç–∞ –Ω–∞ —è–∑—ã–∫–µ go\n\n" +
		"–í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n" +
		"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—é, –∫–∞–∂–¥–æ–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç—Å—ã–ª–∞—Ç—å—Å—è —Å–æ–∑–¥–∞—Ç–µ–ª—é\n" +
		"/random - —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ\n" +
		"/creator - —É–∑–Ω–∞—Ç—å –æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ"

	creator = "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞:\n" +
		"–ò–ª—å—è –õ—É–∫—å—è–Ω–æ–≤ –∏–∑ 3–ò–°3."

	help = "–í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n" +
		"/random - —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ\n" +
		"/creator - —É–∑–Ω–∞—Ç—å –æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ"
}
